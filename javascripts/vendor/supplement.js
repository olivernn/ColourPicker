// supplement.js JavaScript Extras, version: 0.0.1
// (c) 2011 Oliver Nightingale
//
//  Released under MIT license.
//
supplement={defineMethod:function(a,b,c){if(!a[b]){if(typeof Object.defineProperty=="function")try{Object.defineProperty(a,b,{value:c,enumerable:!1,configurable:!1})}catch(d){}a[b]||(a[b]=c)}}};supplement.defineMethod(Array,"wrap",function(a){if(a==null||a==void 0)return[];if(Array.isArray(a))return a;return[a]});supplement.defineMethod(Array.prototype,"uniq",function(){return this.reduce(function(a,b){a.indexOf(b)===-1&&a.push(b);return a},[])});
supplement.defineMethod(Array,"range",function(a,b){if(!a||!b)throw new TypeError("Array.range called with no range start or end");for(var c=[],d=a;d<=b;d++)c.push(d);return c});supplement.defineMethod(Array.prototype,"detect",function(a,b){for(var c=this.length,d=null,e=0;e<c;e++)if(a.call(b,this[e],e,this)){d=this[e];break}return d});
supplement.defineMethod(Array,"toArray",function(a){if(typeof a==="string")throw new TypeError("Array.toArray called on non-arguments");return Array.prototype.slice.call(a,0)});supplement.defineMethod(Function.prototype,"singleUse",function(){var a=this,b=!1;return function(){if(!b){b=!0;var c=Array.prototype.slice.call(arguments,0);return a.apply(null,c)}}});
supplement.defineMethod(Function.prototype,"curry",function(){var a=Array.prototype.slice.call(arguments,0),b=this;return function(){Array.prototype.slice.call(arguments,0).forEach(function(b){a.push(b)});return b.apply(null,a)}});supplement.defineMethod(Function.prototype,"throttle",function(a){var b=this,c,d;return function(){var e=Array.prototype.slice.call(arguments,0);c=new Date;d=d||0;if(!(c-d<a))return d=c,b.apply(null,e)}});
supplement.defineMethod(Function.prototype,"debounce",function(a){var b=this,c;return function(){var d=Array.prototype.slice.call(arguments,0);clearTimeout(c);c=setTimeout(function(){return b.apply(null,d)},a)}});supplement.defineMethod(Number.prototype,"times",function(a){for(var b=0;b<this;b++)a(b)});supplement.defineMethod(Object,"values",function(a){if(a!==Object(a))throw new TypeError("Object.values called on non-object");return Object.keys(a).map(function(b){return a[b]})});
supplement.defineMethod(Object,"provide",function(a){if(a!==Object(a))throw new TypeError("Object.provide called on non-object");var b=Array.prototype.slice.call(arguments,1),c=a;b.forEach(function(a){if(c[a]){if(c[a]!==Object(c[a]))throw new TypeError("Object.provide can only add properties to a plain object");}else c[a]={};c=c[a]});return c});